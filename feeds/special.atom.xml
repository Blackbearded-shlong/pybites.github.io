<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyBites - Special</title><link href="https://pybit.es/" rel="alternate"></link><link href="https://pybit.es/feeds/special.atom.xml" rel="self"></link><id>https://pybit.es/</id><updated>2017-07-07T13:23:00+02:00</updated><entry><title>200 Days of PyBites, 100 Days of Code and our Next Project</title><link href="https://pybit.es/special-100days-of-code.html" rel="alternate"></link><published>2017-07-07T13:23:00+02:00</published><updated>2017-07-07T13:23:00+02:00</updated><author><name>PyBites</name></author><id>tag:pybit.es,2017-07-07:/special-100days-of-code.html</id><summary type="html">&lt;p&gt;&lt;a href="https://twitter.com/pybites/status/883219041912987648"&gt;We did it!&lt;/a&gt; #100DaysOfCode is done: 5K lines of code, 100 scripts. Just on the day PyBites turns 200 days. In this article we will share our learning on this major project and announce our next 100 days effort ...&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;We highly recommend doing 100 Days no matter your level. Being aspiring or experienced programmers, you need deliberate practice. A lot of it. We can now assure you that 100Days makes you practice. And with the public commitment it's also a way to enhance your portfolio. - PyBites&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://twitter.com/pybites/status/883219041912987648"&gt;We did it!&lt;/a&gt; #100DaysOfCode is done: 5K lines of code, 100 scripts. Just on the day PyBites turns 200 days. In this article we will share our learning on this major project and announce our next 100 days effort ...&lt;/p&gt;
&lt;h2&gt;The Challenge&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pybit.es/special-100days.html"&gt;Last 100 days celebration&lt;/a&gt; we rewarded ourselves with a challenge: do the &lt;a href="https://medium.freecodecamp.org/join-the-100daysofcode-556ddb4579e4"&gt;100 Days of Code Challenge&lt;/a&gt;. Today is &lt;em&gt;Day 100&lt;/em&gt; and we confirm: &lt;em&gt;mission accomplished&lt;/em&gt;. With busy schedules it was not always easy, but we delivered. More on this in the Retrospective towards the end. First let us break it down ...&lt;/p&gt;
&lt;h2&gt;Stats&lt;/h2&gt;
&lt;p&gt;Here is our &lt;a href="https://github.com/pybites/100DaysOfCode"&gt;100DaysOfCode repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/100"&gt;We wrote roughly 5K lines of code&lt;/a&gt;, divided into 100 scripts, one each day:&lt;/p&gt;
&lt;p&gt;&lt;img alt="distribution of LOC per script" src="https://pybit.es/images/100d_histogram.png"&gt;&lt;/p&gt;
&lt;p&gt;We &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/007"&gt;auto-tweeted&lt;/a&gt; our progress each day which was tracked in our &lt;a href="https://github.com/pybites/100DaysOfCode/blob/master/LOG.md"&gt;log file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/096"&gt;most popular tweets&lt;/a&gt; were: &lt;/p&gt;
&lt;p&gt;&lt;img alt="most popular tweets" src="https://pybit.es/images/100d_most_popular.png"&gt;&lt;/p&gt;
&lt;h2&gt;Module Index&lt;/h2&gt;
&lt;p&gt;We ended up using exactly 100 modules as well (weird coincidence LOL):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pypi&lt;/span&gt;      &lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;42&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;42.0&lt;/span&gt;&lt;span class="o"&gt;%)&lt;/span&gt;
&lt;span class="n"&gt;stdlib&lt;/span&gt;    &lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;38&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;38.0&lt;/span&gt;&lt;span class="o"&gt;%)&lt;/span&gt;
&lt;span class="n"&gt;own&lt;/span&gt;       &lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;20.0&lt;/span&gt;&lt;span class="o"&gt;%)&lt;/span&gt;
&lt;span class="o"&gt;------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Total&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can see the full index &lt;a href="https://github.com/pybites/100DaysOfCode/blob/master/021/index.txt"&gt;of used modules&lt;/a&gt;. Here you can pick your module and go directly to the days where we used it. &lt;/p&gt;
&lt;p&gt;Find something useful? You can thank us by starring the repo. &lt;/p&gt;
&lt;p&gt;See any issue or things we can improve? Fork the repo and make a Pull Request. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Do notice&lt;/em&gt; that some scripts are in a pretty basic state. Time was not always on our side. We need a round 2 to do some cleanup. Bear   with us ...&lt;/p&gt;
&lt;h2&gt;Showcase of 10 Utilities&lt;/h2&gt;
&lt;p&gt;Here are some scripts we specially liked:&lt;/p&gt;
&lt;h3&gt;1. &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/086"&gt;Day 086&lt;/a&gt; - Twitter Archive Stats&lt;/h3&gt;
&lt;p&gt;Script to pull some quick stats from a #Twitter Archive CSV&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(log) Using Counter and csv.Dictreader. Simple exercise, yet useful data. You can run it yourself downloading your Twitter Archive in Settings&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Twitter archive stats" src="https://pybit.es/images/100d_twitter-archive.png"&gt;&lt;/p&gt;
&lt;p&gt;(refactored into a package later - see &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/093"&gt;Day 093&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;2. &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/014"&gt;Day 014&lt;/a&gt; - Lynda.com new Python course auto-tweeter&lt;/h3&gt;
&lt;p&gt;Script to automatically tweet out new @lynda (#Python) titles&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(log) Feedparser is awesome. Want to run it with filter on Python. Abstracted twitter config away in repo's common dir (re-use).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We were &lt;em&gt;surprised&lt;/em&gt; to find &lt;em&gt;us&lt;/em&gt; tweeting out this one yesterday ;)&lt;/p&gt;
&lt;p&gt;&lt;img alt="lynda notifications" src="https://pybit.es/images/100d_lynda.png"&gt;&lt;/p&gt;
&lt;h3&gt;3. &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/059"&gt;Day 059&lt;/a&gt; - Send an SMS with Twilio&lt;/h3&gt;
&lt;p&gt;Using the #Twilio #API to send SMS messages&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(log) Prework for another app where I want to use Twilio to send reminder notification and text friends :)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="twilio API" src="https://pybit.es/images/100d_twilio.png"&gt;&lt;/p&gt;
&lt;h3&gt;4. &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/013"&gt;Day 013&lt;/a&gt; - Weather app&lt;/h3&gt;
&lt;p&gt;A simple #Flask app to compare weather of 2 cities (using OpenWeatherMap #API)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(log) This was a nice follow-up of 012, making it more generic (support any city), using Jinja templating, Flask form handling, and of course a good chunk of timezone handling (for sunset and sunrise)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="weather compare app" src="https://pybit.es/images/weather-app.png"&gt;&lt;/p&gt;
&lt;p&gt;This led to &lt;a href="https://pybit.es/flask-simple-weather-app.html"&gt;this article&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;5. &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/099"&gt;Day 099&lt;/a&gt; - Flask photo gallery&lt;/h3&gt;
&lt;p&gt;Simple #Flask app to display photos in a directory&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(log) This is a very basic app to demonstrate displaying images using Flask and Jinja templates. All photos need to be stored in the "static" dir within the Flask folder structure. The glob module is used to parse the photo dir. The app can and will be expanded and refactored.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="flask gallery" src="https://pybit.es/images/100d_photo_gallery.png"&gt;&lt;/p&gt;
&lt;h3&gt;6. &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/003"&gt;Day 003&lt;/a&gt; - Gif image creator&lt;/h3&gt;
&lt;p&gt;Script to generate a gif from various png/jpg images&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(log) Useful for blog, awesome: pip install imageio, cli arg interface is more code :)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="example gif made with script" src="https://pybit.es/images/slackbot.gif"&gt;&lt;/p&gt;
&lt;h3&gt;7. &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/033"&gt;Day 033&lt;/a&gt; - Water reminder app&lt;/h3&gt;
&lt;p&gt;I need to drink more water at work so I wrote a #Python #script to remind (spam) me every hour&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(log) A simple script using MIME and a cron job (read the readme.txt) to remind me to drink more water at work! Doesn't email on the weekends or before/after hours. Over the top? Maybe. Satisfying? Hell yes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="water drinking app" src="https://pybit.es/images/100d_waterdrinking-app.png"&gt;&lt;/p&gt;
&lt;h3&gt;8. &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/022"&gt;Day 022&lt;/a&gt; - Amazon affiliation link generator&lt;/h3&gt;
&lt;p&gt;Create and paste #Amazon affiliation link to clipboard #pyperclip @AlSweigart&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(log) A nice little utility to copy an take Amazon link from clipboard, convert it into an affiliation link and paste it back to clipboard&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="amazon affiliation link generator" src="https://pybit.es/images/100d_affiliation_link_creator.png"&gt;&lt;/p&gt;
&lt;h3&gt;9. &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/074"&gt;Day 074&lt;/a&gt; - Making a ecard with Pillow&lt;/h3&gt;
&lt;p&gt;Using Pillow to add text and opacity to an image = your own cards&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(log) Played with the Pillow module. Script to let user enter an image path (or url) and text to put on the image. Pillow does the rest. Could be a useful recipe to make your own Birthday cards :)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="putting text on image with PIL" src="https://pybit.es/images/100d_pillow.png"&gt;&lt;/p&gt;
&lt;h3&gt;10. &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/080"&gt;Day 080&lt;/a&gt; - "Is this Bob or Julian?"&lt;/h3&gt;
&lt;p&gt;"Is this Bob or Julian?" - script to reveal who of @pybites tweets&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(log) Fun little exercise that started with Anthony Shaw asking who he was talking to - it actually became more involved turning/testing out location on our tweets and adding exception handling ... nice practice! (and a funny new service for our PyBites community)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="who tweets script" src="https://pybit.es/images/100d_twotweeted.png"&gt;&lt;/p&gt;
&lt;h3&gt;Bonus &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/009"&gt;Day 009&lt;/a&gt; - as we initiated this post ...&lt;/h3&gt;
&lt;p&gt;Interactive script to create a new Pelican blog article&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(log) A lot of known concepts, but nice to bring a lot of functionality together, and above all a really useful script for our blog&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As we started this post: HAPPY BIRTHDAY!&lt;/p&gt;
&lt;p&gt;&lt;img alt="easter egg" src="https://pybit.es/images/100d_newpost.png"&gt;&lt;/p&gt;
&lt;h2&gt;Retrospective&lt;/h2&gt;
&lt;p&gt;As you can see, not only did we get a lot of code written but we had a hell of a lot of fun doing it!&lt;/p&gt;
&lt;p&gt;That’s the only way we got to 100 days with our sanity intact. It wasn’t easy in the least: Family, Kids, new jobs, and the usual PyBites responsibilities didn’t leave us with a heap of time but we managed to push and get there in the end. Again, the fun factor is what made it achievable.&lt;/p&gt;
&lt;p&gt;Looking back on the 100 days, it’s quite shocking to see how much we accomplished and learned. Julian developed an almost obsessive love affair with Flask (not a hip flask) and Bob created some truly outstanding, fully functional applications.&lt;/p&gt;
&lt;p&gt;The challenge also gave us the opportunity to scratch our own itches. Julian was able to create a &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/045"&gt;Steam Games notification service&lt;/a&gt; for himself and Bob &lt;a href="https://github.com/pybites/100DaysOfCode/tree/master/061"&gt;assigned himself reading goals using Twilio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While it was insanely tough, the payoff has been huge! We’ve honed our skills, created tools, learned new modules and even developed relationships with other coders - all from participating in the challenge.&lt;/p&gt;
&lt;p&gt;We encourage anyone with a love of programming to take the 100 days of code challenge. Dedicating ourselves to a working script every day was a bit on the crazy side though and is by no means a requirement for the challenge. Just remember, &lt;strong&gt;anything&lt;/strong&gt; is better than nothing so give it a crack!&lt;/p&gt;
&lt;h2&gt;next(PyBites.projects) ?!&lt;/h2&gt;
&lt;p&gt;Yes, the rumors are true: our next 100 days project will be around learning Django. &lt;/p&gt;
&lt;p&gt;We will work incrementally on 2 or 3 projects which we will announce as we go. We will also tailor some articles and code challenges around this effort, so you can learn with us. &lt;/p&gt;
&lt;p&gt;This will be a lot of fun and with this major project under our belt, we're sure that we will learn a thing or two about Django which we hope you can benefit from too. &lt;/p&gt;
&lt;p&gt;Stay tuned ...&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Keep Calm and Code in Python!&lt;/p&gt;
&lt;p&gt;-- PyBites&lt;/p&gt;</content><category term="pybites"></category><category term="100DaysOfCode"></category><category term="learning"></category><category term="modules"></category><category term="special"></category><category term="milestone"></category><category term="lessons"></category><category term="community"></category><category term="automation"></category><category term="utilities"></category><category term="scripts"></category></entry><entry><title>Behind the Scenes of PyBites - a Blog for Passionate Pythonistas (Post #100 Special)</title><link href="https://pybit.es/special-building-pybites.html" rel="alternate"></link><published>2017-04-18T08:24:00+02:00</published><updated>2017-04-18T08:24:00+02:00</updated><author><name>PyBites</name></author><id>tag:pybit.es,2017-04-18:/special-building-pybites.html</id><summary type="html">&lt;p&gt;Python is hot according to &lt;a href="http://insights.dice.com/2016/02/01/whats-hot-and-not-in-tech-skills/"&gt;Dice&lt;/a&gt;. It’s an easy language to learn, has an elegant design and is widely used. In this article we proudly present our now 4 months journey into building PyBites. It’s a reflection of what we achieved and lessons learned. We hope to inspire fellow developers to start their own venture. It is very rewarding!&lt;/p&gt;</summary><content type="html">&lt;p&gt;Python is hot according to &lt;a href="http://insights.dice.com/2016/02/01/whats-hot-and-not-in-tech-skills/"&gt;Dice&lt;/a&gt;. It’s an easy language to learn, has an elegant design and is widely used. In this article we proudly present our now 4 months journey into building PyBites. It’s a reflection of what we achieved and lessons learned. We hope to inspire fellow developers to start their own venture. It is very rewarding!&lt;/p&gt;
&lt;h2&gt;__init__.py&lt;/h2&gt;
&lt;p&gt;Julian and Bob met (virtually) 8 years ago both working for Sun Microsystems. As we wrote on our about page: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;They quickly realised that their mutual enthusiasm for technology, programming and self development was unrivalled and have thus remained the best of friends.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We had already been sharing our passion for Python for some time. We had not done any major publicly documented project / effort together though. Hence we needed a platform …&lt;/p&gt;
&lt;h3&gt;Just get started&lt;/h3&gt;
&lt;p&gt;Around last Christmas break we decided to take action. It is important to take that first step, it’s also the hardest part. Don’t expect your first iteration to be perfect. In fact perfectionism might be your biggest enemy.&lt;/p&gt;
&lt;p&gt;Looking back we made a lot of decisions on the fly, you simply can’t plan for everything in advance. Like writing an article: you have an outline, yet the meat of the story presents itself while writing.&lt;/p&gt;
&lt;h3&gt;Have a success buddy&lt;/h3&gt;
&lt;p&gt;Physical proximity is not required to start a successful project / partnership. Being held accountable is. As Darren Hardy succinctly wrote in &lt;a href="http://www.amazon.com/dp/159315724X/?tag=pyb0f-20"&gt;The Compound Effect&lt;/a&gt;: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Find a success buddy: there are few things as powerful as two people locked arm and arm marching forward the same goal. To up your chances of success, get a success buddy, someone who’ll keep you accountable as you cement your new habit while you return the favor.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;First steps: assert toolset and domain name&lt;/h3&gt;
&lt;p&gt;Based on prior good experience with Jekyll and Github Pages (git + performance), we decided to use a static site generator. To keep it Python we forced ourselves to use and learn &lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt;. We used an &lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;existing Pelican theme&lt;/a&gt;. Terminal (Vim), markdown, Git(hub), we felt right at home.&lt;/p&gt;
&lt;p&gt;We also put some thought into picking a cool domain name &lt;em&gt;pybit.es&lt;/em&gt;: short, startswith(‘py’), bite as in learning Python in bite-sized units and .es is from Spain (couldn’t figure out what to do with .au ...). After a quick hello world post &lt;a href="http://bobbelderbos.com/assets/pybites_home.png"&gt;we were online&lt;/a&gt;, now we had to deliver ...&lt;/p&gt;
&lt;h2&gt;Grinding it out&lt;/h2&gt;
&lt;p&gt;At the start you are just writing, building up a content base. It is hard work and you have to persist. There is no shortcut. You will see a few visitors a day, no comments, no shares, it gets pretty lonely at times, self doubt might kick in. The majority give up at this point but, if you stick with it consistently eventually you will get noticed and traffic starts to flow in. &lt;/p&gt;
&lt;p&gt;We had 2 breakpoints in this regard:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We posted the initial idea to Hacker News (appropriately using ‘Show HN: ...’) and got &lt;a href="https://news.ycombinator.com/item?id=13274876"&gt;some positive feedback&lt;/a&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After a while we recognized that a lot of developers were stuck in the between-Beginner-and-Intermediate stage, so we wrote a &lt;a href="https://redd.it/5sjt3l"&gt;Python resources post&lt;/a&gt; which got a lot of upvotes on the &lt;a href="https://www.reddit.com/r/learnpython/"&gt;learnpython subreddit&lt;/a&gt; and got featured on the &lt;a href="https://pythonbytes.fm/episodes/show/14/lots-of-python-style-and-python-3000-is-3000-days-old"&gt;Python Bytes podcast&lt;/a&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;From there the ball started rolling.&lt;/p&gt;
&lt;h2&gt;Expose your learning, be unique&lt;/h2&gt;
&lt;p&gt;What makes an interesting blog? We decided from the start that we had to fully expose our learning to get the most out of it. Obviously this takes some courage, especially with the code challenges. Be it writing or coding, it is the best way to learn: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You force yourself to practice at regular intervals, &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You care about submitting the best content/code you possibly can, &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you get it wrong, you learn even more. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There is no shame in that. As &lt;a href="https://en.wikiquote.org/wiki/Timothy_Ferriss"&gt;Tim Ferriss said&lt;/a&gt;: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A person's success in life can usually be measured by the number of uncomfortable conversations he or she is willing to have. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Anybody performing on stage gets criticized at some point, it goes with the territory. It is hard to please everybody, nor should you want that.&lt;/p&gt;
&lt;p&gt;We wanted our blog to be original which meant not limiting ourselves to just &lt;a href="http://pybit.es/pages/articles.html"&gt;articles&lt;/a&gt;. We cannot exactly recall how the &lt;a href="http://pybit.es/pages/challenges.html"&gt;code challenges&lt;/a&gt; came about, but we needed a vehicle to learn and it didn’t seem prevalent elsewhere. &lt;/p&gt;
&lt;p&gt;We inquired HN again and &lt;a href="https://news.ycombinator.com/item?id=13352447"&gt;people seemed interested&lt;/a&gt;. Our weekly code challenges (&lt;a href="https://github.com/pybites/challenges"&gt;140 forks at this writing&lt;/a&gt;) turned out to be a great way to learn from each other, and it is adding an interesting dynamic to our site and brand.&lt;/p&gt;
&lt;h3&gt;Market yourself&lt;/h3&gt;
&lt;p&gt;Brand? Yes. That is the advantage of starting a blog: to help create your brand. We recommend reading &lt;a href="http://www.amazon.com/dp/1617292397/?tag=pyb0f-20"&gt;Soft Skills&lt;/a&gt; for practical advice how to market yourself. &lt;/p&gt;
&lt;p&gt;In our second month we hired a designer to make an attractive logo and this really gave PyBites its unique flavor. We became more active on social media. We reached out to fellow Pythonistas. We got invaluable feedback from our readers. We gained quite some traction from Reddit’s &lt;a href="https://www.reddit.com/r/learnpython/"&gt;learnpython&lt;/a&gt; (and grew some thicker skin!). &lt;/p&gt;
&lt;p&gt;We started a &lt;a href="https://www.facebook.com/groups/pybites/"&gt;Facebook group&lt;/a&gt;. We even created two Cheat Sheets to condense part of our learning. It is important to spend some time on marketing your content. You can have top-notch content but if nobody can find you, it might as well just not exist. However ...&lt;/p&gt;
&lt;h3&gt;Content is king&lt;/h3&gt;
&lt;p&gt;The number one focus should be content. We write our articles with great care. We try to come up with interesting and varied code challenges. We want to develop our own style and voice. To keep the momentum we also commit to a certain weekly volume of work: one code challenge, two articles, and a news digest.&lt;/p&gt;
&lt;h3&gt;Automate the boring stuff&lt;/h3&gt;
&lt;p&gt;To allow us to focus on the important, automation is key. Although we manually craft our newsletter we get the article links via a cron script. We parse &lt;a href="http://planetpython.org"&gt;Planet Python&lt;/a&gt;, emailing a daily digest to keep up2date. We &lt;a href="http://pybit.es/100days-autotweet.html"&gt;auto-tweet our daily script&lt;/a&gt; for our &lt;a href="http://pybit.es/special-100days.html"&gt;100DaysOfCode challenge&lt;/a&gt; we are doing these days. &lt;/p&gt;
&lt;p&gt;We use a tool to assist in creating &lt;a href="http://pybit.es/pages/news.html"&gt;our weekly Twitter news digest&lt;/a&gt;. We have automatic featured images on our posts (red = challenge, blue = article, green = news, purple = special occasion). Code challenge participation has &lt;a href="https://github.com/pybites/challenges/blob/master/INSTALL.md"&gt;a process&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;4 months in PyBites is pretty streamlined and that makes things more consistent and compounds to saved time we can use to focus on what matters: the content.&lt;/p&gt;
&lt;h2&gt;Sharpen the saw&lt;/h2&gt;
&lt;p&gt;PyBites made us push the envelope resulting in significant Python learning in the last 4 months. From mastering important concepts of the language to building useful utilities using Pythonic code. If it was not for the blog we would not have had this kind of drive, inspiration nor tooling. &lt;/p&gt;
&lt;p&gt;&lt;img alt="pybites is everywhere" src="https://pybit.es/images/coffee.png"&gt;&lt;/p&gt;
&lt;h2&gt;Building a community&lt;/h2&gt;
&lt;p&gt;From the start we decided to do a weekly newsletter, growing our following. The number of page views only tells you so much. What you really want is returning visitors and loyal followers that want to read your content every week and can provide you with useful feedback. We want to build a community of passionate Pythonistas that want to learn with us (both directions).&lt;/p&gt;
&lt;h3&gt;And we’re just getting started&lt;/h3&gt;
&lt;p&gt;With this sort of momentum, we only can go forward. With such positive results we are pretty stoked to continue to learn Python inside-out sharing our progress and to keep growing our community. &lt;/p&gt;
&lt;h3&gt;We challenge you&lt;/h3&gt;
&lt;p&gt;If you like this article we ask you one favor: send this to a friend or co-worker. Identify something that passionates you and partner up with somebody to start creating a blog, open source project, or some other platform to share your learning. There is no better way to hone your skills than daily practice and holding each other accountable. &lt;/p&gt;
&lt;p&gt;We’re eager to hear from you so leave a comment below to share your story / feedback.&lt;/p&gt;
&lt;p&gt;We hope this article has inspired you to &lt;em&gt;take action&lt;/em&gt;. We hope it convinced you that starting a programming endeavor is not that difficult if you are willing to put in &lt;em&gt;consistent&lt;/em&gt; hard work. &lt;/p&gt;
&lt;p&gt;Besides, helping other people get better is highly rewarding in itself and is an invaluable skill in your developer toolkit. Good luck!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Keep Calm and Code in Python!&lt;/p&gt;
&lt;p&gt;-- Bob and Julian&lt;/p&gt;</content><category term="special"></category><category term="milestone"></category><category term="softskills"></category><category term="learning"></category><category term="lessons"></category><category term="community"></category><category term="pelican"></category><category term="challenge"></category><category term="python"></category><category term="pybites"></category><category term="automation"></category></entry><entry><title>100 Days of PyBites, 100 Days of Code</title><link href="https://pybit.es/special-100days.html" rel="alternate"></link><published>2017-03-29T20:04:00+02:00</published><updated>2017-03-29T20:04:00+02:00</updated><author><name>PyBites</name></author><id>tag:pybit.es,2017-03-29:/special-100days.html</id><summary type="html">&lt;p&gt;In celebration of PyBites being around for 100 days we’re taking on the 100 Days of Code Challenge!&lt;/p&gt;</summary><content type="html">&lt;p&gt;PyBites is 100 days old! It feels like just yesterday we submitted our &lt;a href="http://pybit.es/hello-world.html"&gt;first post&lt;/a&gt; for the world to see (pretty bland amirite?!). Good times!&lt;/p&gt;
&lt;h2&gt;Let’s Celebrate with some Code!&lt;/h2&gt;
&lt;p&gt;To celebrate, we’re going to take on the &lt;a href="https://medium.freecodecamp.com/join-the-100daysofcode-556ddb4579e4"&gt;100 Days of Code Challenge&lt;/a&gt;! &lt;/p&gt;
&lt;p&gt;We’re pretty sure we already do the bare minimum for this challenge though. Coding and learning daily right? (That’s what PyBites is all about!)&lt;/p&gt;
&lt;p&gt;As such, we’re going to put a PyBites spin on the challenge. Not only are we going to code daily but we’re going to actually write a small &lt;em&gt;script&lt;/em&gt; daily!&lt;/p&gt;
&lt;h2&gt;A Big Ask!&lt;/h2&gt;
&lt;p&gt;This is a pretty big ask given we have day jobs, families and the PyBites update schedule. That’s why the task will be split between the two of us.&lt;/p&gt;
&lt;p&gt;We’ve created a &lt;a href="https://github.com/pybites/100DaysOfCode"&gt;Github Repo&lt;/a&gt; to track our 100 days of code. Feel free to check it out starting tomorrow.&lt;/p&gt;
&lt;h2&gt;What kind of scripts?&lt;/h2&gt;
&lt;p&gt;The scripts will be wide ranging but will fall into the following categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scripts that scratch our own itch&lt;/li&gt;
&lt;li&gt;Automating the boring stuff (Inspired to do so by the &lt;a href="http://pybit.es/automate_the_boring_stuff_review.html"&gt;book&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;System Administration&lt;/li&gt;
&lt;li&gt;Web Scraping / APIs&lt;/li&gt;
&lt;li&gt;New Modules&lt;/li&gt;
&lt;li&gt;File Manipulation&lt;/li&gt;
&lt;li&gt;Data Analysis&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pybites/100DaysOfCode/issues/new"&gt;Your ideas&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Complexity wise, it’s all about the solution. Some will be as simple as a Fibonacci sequence generator or a simple recursion function to search a file tree.&lt;/p&gt;
&lt;p&gt;The point is to get coding to hone our Python skills. We already cover the learning side of things with PyBites in general!&lt;/p&gt;
&lt;h2&gt;Join Us!&lt;/h2&gt;
&lt;p&gt;If you’ve been thinking of doing the 100 Days of Code Challenge then why not start with us?&lt;/p&gt;
&lt;p&gt;You can follow along by forking &lt;a href="https://github.com/pybites/100DaysOfCode"&gt;our repo&lt;/a&gt;. We’ll also be &lt;a href="https://twitter.com/pybites"&gt;tweeting&lt;/a&gt; our updates daily.&lt;/p&gt;
&lt;p&gt;If getting commit credit on your GitHub account matters then you can use our &lt;a href="https://github.com/pybites/100DaysOfCode/blob/master/init.py"&gt;init script&lt;/a&gt; to create your own repo.&lt;/p&gt;
&lt;p&gt;Either way, &lt;strong&gt;THANK YOU&lt;/strong&gt; for being with us over the past 100 days! We love what we’ve accomplished so far and we look forward to the next 100 days as there’s always something new to learn.&lt;/p&gt;
&lt;p&gt;Keep Calm and Code in Python (for 100 days)!&lt;/p&gt;
&lt;p&gt;— Julian and Bob&lt;/p&gt;
&lt;p&gt;PS: Notice the purple side bar? Just a simple Pelican theme hack ;) It's our way of celebrating special occasions!&lt;/p&gt;</content><category term="news"></category><category term="special"></category><category term="challenge"></category></entry></feed>