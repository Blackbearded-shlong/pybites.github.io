<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyBites - Bob</title><link>https://pybit.es/</link><description>Python Code Challenges, Articles and News - One Bite a Day</description><lastBuildDate>Sat, 01 Jul 2017 10:45:00 +0200</lastBuildDate><item><title>From Script to Project part 2. - Packaging Your Code in Python</title><link>https://pybit.es/python-packaging.html</link><description>&lt;p&gt;This week's article is about packaging your Python code. Sounds daunting? Actually it is pretty simple.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Sat, 01 Jul 2017 10:45:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-07-01:/python-packaging.html</guid><category>packaging</category><category>modules</category><category>init</category><category>imports</category><category>refactoring</category><category>karma</category><category>Twitter</category></item><item><title>From Script to Project part 1. - Building a Karma Bot with Python and the Slack API</title><link>https://pybit.es/slack-karma-bot.html</link><description>&lt;p&gt;We love Slack! But what if we can make it even cooler? Imagine: you are geeking out with your fellow developers on Slack and you want to give them credit. Or you can write "stupidsubject--" and it automagically shows "stupidsubject's karma decreased to -2". Enter &lt;em&gt;Karma Bot&lt;/em&gt;. This is &lt;a href="https://blog.hipchat.com/2016/05/02/meet-karma-bot/"&gt;nothing new&lt;/a&gt; but building one myself was a good learning exercise and will kick-start our series on packaging your code.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Sun, 25 Jun 2017 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-06-25:/slack-karma-bot.html</guid><category>Slack</category><category>karma</category><category>bot</category><category>API</category><category>picle</category><category>packaging</category><category>logging</category><category>Counter</category></item><item><title>Parsing Twitter Geo Data and Mocking API Calls by Example</title><link>https://pybit.es/twitter-api-geodata-mocking.html</link><description>&lt;p&gt;&lt;a href="https://twitter.com/anthonypjshaw/status/875275923930480641"&gt;"Is this Bob or Julian?!"&lt;/a&gt; ... yeah tweeting from our shared &lt;a href="https://twitter.com/pybites"&gt;@pybites Twitter account&lt;/a&gt; can be confusing! So I made a little script to parse the location of our tweets. Then I extended it to make it testable. I wrote a &lt;a href="https://pybit.es/codechallenge14.html"&gt;decorator&lt;/a&gt; to cache a couple of API outputs to be used with the unittest.mock patch decorator I learned about. A simple script turned into a good learning exercise.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Sat, 17 Jun 2017 23:55:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-06-17:/twitter-api-geodata-mocking.html</guid><category>twitter</category><category>API</category><category>mock</category><category>geo</category><category>data</category><category>unittest</category><category>pickle</category><category>tweepy</category><category>testing</category><category>100days</category></item><item><title>Next Time I Will Use Pandas to Parse Html Tables</title><link>https://pybit.es/pandas-parse-html-table.html</link><description>&lt;p&gt;Last week I did some html table parsing with BeautifulSoup and regex. It turns out there is an easier way to do this: Pandas.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Thu, 08 Jun 2017 12:46:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-06-08:/pandas-parse-html-table.html</guid><category>BeautifulSoup</category><category>regex</category><category>Pandas</category><category>parsing</category><category>data</category><category>data cleaning</category><category>energy</category><category>json</category><category>csv</category><category>html</category></item><item><title>OOP Beyond the Basics: Using Properties for Encapsulation, Computation and Refactoring</title><link>https://pybit.es/property-decorator.html</link><description>&lt;p&gt;In this article I share my learning of the property decorator coding a simple Account class. I think it's an unmissable tool in your (Python) OOP toolkit.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Wed, 31 May 2017 12:00:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-05-31:/property-decorator.html</guid><category>oop</category><category>property</category><category>decorators</category><category>encapsulation</category><category>computation</category><category>dunder</category><category>refactoring</category><category>pytest</category><category>2vs3</category><category>getter</category><category>setter</category></item><item><title>PyCon 2017 - Digest, Impressions, Reflection</title><link>https://pybit.es/pycon-2017.html</link><description>&lt;p&gt;PyCon 2017 was such a great conference, I made so many good connections, got to see many good things the community is working on. It was very inspiring. In this article a digest.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Wed, 24 May 2017 12:00:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-05-24:/pycon-2017.html</guid><category>conference</category><category>pycon</category><category>learning</category><category>community</category><category>networking</category><category>bokeh</category><category>parallel</category><category>mentoring</category><category>photos</category></item><item><title>Building a Simple Birthday App with Flask-SQLAlchemy</title><link>https://pybit.es/flask-sqlalchemy-bday-app.html</link><description>&lt;p&gt;In this article I teach you how to get started with Flask-SQLAlchemy. I will set up a model, create the DB, retrieve birthdays from FB and import them into the DB. Lastly I will query the birthdays by date range.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Thu, 11 May 2017 11:00:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-05-11:/flask-sqlalchemy-bday-app.html</guid><category>Flask-SQLAlchemy</category><category>SQLAlchemy</category><category>Flask</category><category>Facebook</category><category>birthday</category><category>calendar</category><category>icalendar</category><category>datetime</category></item><item><title>How to Write a Simple Slack Bot to Monitor Your Brand on Twitter</title><link>https://pybit.es/twitter-monitor-slack-notify.html</link><description>&lt;p&gt;In this article I show you how to monitor Twitter and post alerts to a Slack channel. We built a nice tool to monitor whenever our domain gets mentioned on Twitter. The slacker and twython modules made this pretty easy. We also use configparser and logging.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 25 Apr 2017 11:00:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-04-25:/twitter-monitor-slack-notify.html</guid><category>Twitter</category><category>Slack</category><category>Automation</category><category>monitoring</category><category>twython</category><category>TwythonStreamer</category><category>slacker</category><category>configparser</category><category>logging</category><category>brand</category><category>triggers</category></item><item><title>Simple Flask app to compare the weather of 2 cities</title><link>https://pybit.es/flask-simple-weather-app.html</link><description>&lt;p&gt;In this post I show you how to build a simple Flask app to compare the weather of 2 cities using the &lt;a href="https://openweathermap.org"&gt;OpenWeatherMap API&lt;/a&gt;. Maybe this aids you in solving &lt;a href="http://pybit.es/codechallenge15.html"&gt;this week's challenge&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Thu, 20 Apr 2017 09:40:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-04-20:/flask-simple-weather-app.html</guid><category>Flask</category><category>weather</category><category>API</category><category>OpenWeatherMap</category><category>learning</category><category>Heroku</category><category>pytz</category><category>deploy</category><category>Jinja</category><category>CSS</category></item><item><title>How to Write a Decorator with an Optional Argument?</title><link>https://pybit.es/decorator-optional-argument.html</link><description>&lt;p&gt;When playing with decorators (&lt;a href="http://pybit.es/codechallenge14.html"&gt;this week's challenge&lt;/a&gt;) I got stuck: how do you write a decorator that takes an optional argument? &lt;a href="http://www.amazon.com/dp/1449340377/?tag=pyb0f-20"&gt;Python cookbook 3rd ed&lt;/a&gt; edition to the rescue. In this post how I failed my way to the right solution.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 11 Apr 2017 09:00:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-04-11:/decorator-optional-argument.html</guid><category>decorators</category><category>arguments</category><category>tricks</category><category>tips</category><category>cookbook</category></item><item><title>How we Automated our 100DaysOfCode Daily Tweet</title><link>https://pybit.es/100days-autotweet.html</link><description>&lt;p&gt;In this article I show you a way to automatically tweet your #100DaysOfCode Challenge progress. This saves you some extra time to focus on the coding. Isn't that all what matters?&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Wed, 05 Apr 2017 23:00:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-04-05:/100days-autotweet.html</guid><category>twitter</category><category>automation</category><category>tools</category><category>100days</category><category>logging</category><category>tweepy</category><category>pytz</category></item><item><title>How to Build a Simple Slack Bot</title><link>https://pybit.es/simple-chatbot.html</link><description>&lt;p&gt;I was playing with Slack's Real Time Messaging API the other day. Building a bot is pretty easy. In this article a simple example.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 04 Apr 2017 23:30:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-04-04:/simple-chatbot.html</guid><category>slack</category><category>API</category><category>bot</category><category>chatbot</category><category>deployment</category><category>shell</category><category>nohup</category><category>automation</category></item><item><title>5 Vim Tricks to Speed up Your Python Development</title><link>https://pybit.es/vim-tricks.html</link><description>&lt;p&gt;In this article 5 Vim shortcuts to speed up your Python development.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 28 Mar 2017 09:00:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-03-28:/vim-tricks.html</guid><category>vim</category><category>tools</category><category>shortcuts</category><category>tricks</category><category>flake8</category><category>howdoi</category><category>conque</category><category>shell</category><category>virtualenv</category><category>nerdtree</category><category>pyperclip</category></item><item><title>Best Practices for Compatible Python 2 and 3 Code</title><link>https://pybit.es/python-porting.html</link><description>&lt;p&gt;&lt;a href="http://py3readiness.org/"&gt;95% of most popular Python packages support Python 3&lt;/a&gt;. Maybe you are lucky and get to start fresh using Python 3. However as of last year &lt;a href="http://www.randalolson.com/2016/09/03/python-2-7-still-reigns-supreme-in-pip-installs/"&gt;Python 2.7 still reigns supreme in pip installs&lt;/a&gt; and at a lot of places 2.x is the only version you get to work in. I think writing Python 2 and 3 compatible code is an important skill, so lets check what it entails.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Wed, 22 Mar 2017 12:42:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-03-22:/python-porting.html</guid><category>2vs3</category><category>tox</category><category>six</category><category>python-modernize</category><category>porting</category><category>future</category><category>2to3</category><category>coverage</category><category>futurize</category><category>caniusepython3</category><category>pip</category><category>Requests</category><category>Werkzeug</category></item><item><title>10 Tips to Get More out of Your Regexes</title><link>https://pybit.es/mastering-regex.html</link><description>&lt;p&gt;Regular expressions can be arcane, yet when used with care they can also be very powerful. In this post a couple of tips to get more out of your regexes when using Python's re module.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Wed, 15 Mar 2017 07:45:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-03-15:/mastering-regex.html</guid><category>regex</category><category>tips</category><category>parsing</category><category>regular expressions</category><category>findall</category></item><item><title>Module of the Week - Requests-cache for Repeated API Calls</title><link>https://pybit.es/requests-cache.html</link><description>&lt;p&gt;Today a quick article on a nice caching module when working with APIs: &lt;a href="https://pypi.python.org/pypi/requests-cache"&gt;Requests-cache&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 14 Mar 2017 08:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-03-14:/requests-cache.html</guid><category>requests</category><category>cache</category><category>APIs</category><category>package</category></item><item><title>Simple API Part 2 - Building a Deep Work Logger with Flask, Slack and Google Docs</title><link>https://pybit.es/flask-api-part2.html</link><description>&lt;p&gt;After &lt;a href="http://pybit.es/simple-flask-api.html"&gt;Simple API - part 1&lt;/a&gt; a more practical app in this part 2 tutorial: a Deep Work logger integrating Google docs and Slack, including deployment of the app to Heroku.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Fri, 10 Mar 2017 18:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-03-10:/flask-api-part2.html</guid><category>Flask</category><category>Slack</category><category>Google docs</category><category>Heroku</category><category>APIs</category><category>pygsheets</category><category>git</category><category>commands</category><category>productivity</category><category>learning</category></item><item><title>Don't let mutability of compound objects fool you!</title><link>https://pybit.es/mutability.html</link><description>&lt;p&gt;In this article I explain the difference between shallow versus deep copy with a working example. It's an important concept when working with compound objects.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 07 Mar 2017 11:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-03-07:/mutability.html</guid><category>list</category><category>mutable</category><category>copy</category><category>deepcopy</category></item><item><title>How To Build a Simple API with Flask and Unit Test it</title><link>https://pybit.es/simple-flask-api.html</link><description>&lt;p&gt;In this post I will create a simple API with Flask and test it with curl and unit testing its HTTP methods.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Fri, 03 Mar 2017 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-03-03:/simple-flask-api.html</guid><category>APIs</category><category>Flask</category><category>REST</category><category>curl</category><category>testing</category><category>unittest</category><category>inventory</category></item><item><title>5 tips to speed up your Python code</title><link>https://pybit.es/faster-python.html</link><description>&lt;p&gt;In this post I will give you 5 tips to speed up your code.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 21 Feb 2017 09:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-02-21:/faster-python.html</guid><category>performance</category><category>data structures</category><category>pythonic</category><category>generators</category><category>map</category><category>builtin</category><category>algorithms</category><category>regex</category><category>patterns</category></item><item><title>Visualizing website and social media metrics with matplotlib [notebook]</title><link>https://pybit.es/matplotlib-starter.html</link><description>&lt;p&gt;in &lt;a href="https://github.com/pybites/pybites.github.io-src/blob/master/content/matplotlib-starter.ipynb"&gt;this notebook&lt;/a&gt; i use matplotlib.pyplot to create simple yet powerful visualizations of pybites twitter activity, our blog's tag usage and our website traffic. Lastly I use Google trends to see popularity of various social media.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Wed, 08 Feb 2017 09:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-02-08:/matplotlib-starter.html</guid><category>matplotlib</category><category>visualization</category><category>histogram</category><category>jupyter</category><category>data analysis</category><category>data science</category><category>socialmedia</category><category>googletrends</category></item><item><title>Python Tricks book review</title><link>https://pybit.es/pytricks-review.html</link><description>&lt;p&gt;A review of Dan Bader's &lt;a href="https://dbader.org/products/python-tricks-book/"&gt;Python tricks book&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 31 Jan 2017 09:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-01-31:/pytricks-review.html</guid><category>review</category><category>tricks</category><category>tips</category><category>pythonic</category><category>oop</category><category>ABC</category><category>dicts</category><category>cleancode</category></item><item><title>Python's data model by example</title><link>https://pybit.es/python-data-model.html</link><description>&lt;p&gt;After &lt;a href="http://pybit.es/oop-primer.html"&gt;last post on OOP&lt;/a&gt; a logical follow-up is Python's data model. We use the great &lt;a href="http://amzn.to/2lxsmBg"&gt;Fluent Python book&lt;/a&gt; to code up an example of our own, showing the powerful way you can leverage this data model. You can download the notebook &lt;a href="https://github.com/pybites/pybites.github.io-src/blob/master/content/data_model.ipynb"&gt;here&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Wed, 25 Jan 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-01-25:/python-data-model.html</guid><category>datamodel</category><category>oop</category><category>magicmethods</category><category>builtin</category><category>pythonic</category><category>iterators</category><category>slicing</category></item><item><title>Everything is an Object, Python OOP primer</title><link>https://pybit.es/oop-primer.html</link><description>&lt;p&gt;I created &lt;a href="https://github.com/pybites/pybites.github.io-src/blob/master/content/oop_fun.ipynb"&gt;a notebook&lt;/a&gt; on OOP (object oriented programming) in Python.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 24 Jan 2017 23:59:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-01-24:/oop-primer.html</guid><category>tutorial</category><category>oop</category><category>objectoriented</category><category>programming</category><category>inheritance</category><category>polymorphism</category><category>ABC</category><category>encapsulation</category><category>property</category></item><item><title>Errors should never pass silently</title><link>https://pybit.es/error_handling.html</link><description>&lt;p&gt;In this article some important anti-patterns regarding error handling and how to solve them making your code more Pythonic and easier to maintain.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Wed, 18 Jan 2017 23:59:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-01-18:/error_handling.html</guid><category>exceptions</category><category>Zen of Python</category><category>error handling</category><category>cleancode</category><category>anti-patterns</category></item><item><title>5 cool things you can do with itertools</title><link>https://pybit.es/itertools-examples.html</link><description>&lt;p&gt;Itertools is a very useful module. In this short post I show some 5 examples how you can use it. Some of this stuff might be useful in next week's challenge ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Thu, 12 Jan 2017 23:55:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-01-12:/itertools-examples.html</guid><category>iterators</category><category>itertools</category><category>tricks</category><category>generators</category><category>game</category><category>notebooks</category><category>permutations</category></item><item><title>Beautiful, idiomatic Python</title><link>https://pybit.es/beautiful-python.html</link><description>&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=OSGv2VnC0go"&gt;Transforming Code into Beautiful, Idiomatic Python&lt;/a&gt; is a must-watch to write more Pythonic code. In this post some highlights.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 10 Jan 2017 09:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-01-10:/beautiful-python.html</guid><category>pythonic</category><category>cleancode</category><category>collections</category><category>2vs3</category><category>namedtuples</category><category>decorators</category><category>contextmanagers</category></item><item><title>Code Challenge Pilot - code review</title><link>https://pybit.es/challenge_pilot_codereview.html</link><description>&lt;p&gt;In this post I review the code of challenge # 1 and refactor it to make it more Pythonic.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Thu, 05 Jan 2017 09:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-01-05:/challenge_pilot_codereview.html</guid><category>codechallenges</category><category>refactoring</category><category>code review</category><category>bestpractices</category><category>pythonic</category><category>git</category><category>Github</category><category>git flow</category><category>vim</category><category>assert</category></item><item><title>A great book that makes algorithms accessible</title><link>https://pybit.es/grokking_algorithms.html</link><description>&lt;p&gt;I finished reading Grokking Algorithms, it's a very accessible resource for learning algorithms / data structures, highly recommended.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 03 Jan 2017 09:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-01-03:/grokking_algorithms.html</guid><category>algorithms</category><category>data structures</category><category>performance</category><category>collections</category></item><item><title>5 min guide to PEP8</title><link>https://pybit.es/pep8.html</link><description>&lt;p&gt;Today a post on PEP8, the Style Guide for Python Code&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Mon, 02 Jan 2017 09:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-01-02:/pep8.html</guid><category>pep8</category><category>cleancode</category><category>guidelines</category><category>coding style</category><category>bestpractices</category><category>pythonic</category><category>vim</category></item><item><title>3.6 new features</title><link>https://pybit.es/3.6_new.html</link><description>&lt;p&gt;Finally got a chance to look into Python 3.6's new features. In this post some highlights and pointers.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Sat, 31 Dec 2016 11:39:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2016-12-31:/3.6_new.html</guid><category>3.6</category><category>features</category><category>release</category><category>asyncio</category><category>formatting</category><category>typing</category><category>dicts</category><category>secrets</category><category>generators</category><category>readability</category></item><item><title>Automate Tweeting: how to build a Twitterbot</title><link>https://pybit.es/automate-twitter.html</link><description>&lt;p&gt;In this post I will show you how we automate part of our Twitter posting using feedparser and tweepy.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Thu, 29 Dec 2016 01:28:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2016-12-29:/automate-twitter.html</guid><category>twitterapi</category><category>tweepy</category><category>feedparser</category><category>rss</category><category>logging</category><category>podcasts</category><category>virtualenv</category><category>pyvenv</category><category>venv</category><category>news</category><category>3.6</category></item><item><title>Learning from Python mistakes</title><link>https://pybit.es/py-mistakes.html</link><description>&lt;p&gt;In this post I summarize some great lessons Mike Pirnat shared in his free ebook 'How to make mistakes in Python'&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Wed, 28 Dec 2016 09:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2016-12-28:/py-mistakes.html</guid><category>bestpractices</category><category>pep8</category><category>virtualenv</category><category>cleancode</category><category>logging</category><category>pytest</category><category>ebook</category><category>refactoring</category><category>gotchas</category></item><item><title>How to create a nice-looking HTML page of your Kindle book highlights (notes)</title><link>https://pybit.es/kindle-json-to-html.html</link><description>&lt;p&gt;In this post I share a simple script to convert Bookcision JSON into a HTML page for your blog.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Tue, 27 Dec 2016 00:10:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2016-12-27:/kindle-json-to-html.html</guid><category>kindle</category><category>Template strings</category><category>json</category><category>html</category><category>books</category><category>bookcision</category><category>generators</category></item><item><title>Zip and ship, make an executable zipfile of your py project</title><link>https://pybit.es/zip-and-ship.html</link><description>&lt;p&gt;In this post I show an example how you can distribute your code as an executable zipfile, a neat trick I discovered in Chapter 6 of The Hitchhiker's Guide to Python&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Sun, 25 Dec 2016 09:06:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2016-12-25:/zip-and-ship.html</guid><category>zip</category><category>packaging</category><category>distribute</category><category>pip</category></item><item><title>Get a weekly digest from a Pelican blog</title><link>https://pybit.es/blog-digest.html</link><description>&lt;p&gt;In this post a script we use to get a weekly digest of our posts.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Sat, 24 Dec 2016 15:40:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2016-12-24:/blog-digest.html</guid><category>pelican</category><category>feedparser</category><category>rss</category></item><item><title>2016 py articles and useful books</title><link>https://pybit.es/py-articles-books2016.html</link><description>&lt;p&gt;Some of my Python articles I posted on my blog this year and useful books&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Fri, 23 Dec 2016 00:31:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2016-12-23:/py-articles-books2016.html</guid><category>pythonic</category><category>books</category><category>collections</category><category>tricks</category><category>tips</category><category>data science</category><category>matplotlib</category><category>pandas</category></item><item><title>Read the stdlib: deque</title><link>https://pybit.es/collections-deque.html</link><description>&lt;p&gt;Use collections.deque to rotate letters in string (or elements in list). It has a native method which performs faster too.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Wed, 21 Dec 2016 00:05:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2016-12-21:/collections-deque.html</guid><category>collections</category><category>data structures</category><category>performance</category><category>stdlib</category><category>deque</category></item></channel></rss>