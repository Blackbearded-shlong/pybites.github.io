<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyBites - Reviews</title><link href="https://pybit.es/" rel="alternate"></link><link href="https://pybit.es/feeds/reviews.atom.xml" rel="self"></link><id>https://pybit.es/</id><updated>2017-05-24T12:00:00+02:00</updated><entry><title>PyCon 2017 - Digest, Impressions, Reflection</title><link href="https://pybit.es/pycon-2017.html" rel="alternate"></link><published>2017-05-24T12:00:00+02:00</published><updated>2017-05-24T12:00:00+02:00</updated><author><name>Bob</name></author><id>tag:pybit.es,2017-05-24:/pycon-2017.html</id><summary type="html">&lt;p&gt;PyCon 2017 was such a great conference, I made so many good connections, got to see many good things the community is working on. It was very inspiring. In this article a digest.&lt;/p&gt;</summary><content type="html">&lt;p&gt;PyCon 2017 was such a great conference, I made so many good connections, got to see many good things the community is working on. It was very inspiring. &lt;/p&gt;
&lt;p&gt;In this article I will summarize some highlights and link to other resources.&lt;/p&gt;
&lt;h2&gt;Networking&lt;/h2&gt;
&lt;p&gt;The best thing you can do at a conference.&lt;/p&gt;
&lt;p&gt;In that context the best lesson I think came from &lt;a href="https://twitter.com/AlSweigart"&gt;@AlSweigart&lt;/a&gt;: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;... skip all the talks - conference is primarily about meeting new people. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCrJhliKNQ8g0qoE_zvL8eVg/videos"&gt;All the talks are up&lt;/a&gt; and you can watch them at your own pace, the in-person networking could only be done during these days though so I am happy I did plenty of that :)&lt;/p&gt;
&lt;p&gt;Ideas, ideas, ideas. The expo hall was filled with companies and interesting people. I spoke with various companies and great software developers, I met with Dan Bader, Mike Kennedy, Brian Okken, Anthony Shaw, Trey Hunner, and many more, which gave me a lot of inspiration.&lt;/p&gt;
&lt;h2&gt;Talks / workshops&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The keynotes were fantastic, from Kelsey Hightower's &lt;a href="https://www.youtube.com/watch?v=u_iAXzy3xBA&amp;amp;feature=youtu.be&amp;amp;t=1677"&gt;Ok Google, talk to Kubernetes&lt;/a&gt; to Jake's &lt;a href="https://www.youtube.com/watch?v=ZyjCqQEUa8o"&gt;Why is Python such an effective tool in science&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Why don't you use C instead of Python? It's so much faster&lt;/p&gt;
&lt;p&gt;Why don't you commute by plane instead of car? It's so much faster.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Again &lt;a href="https://www.youtube.com/channel/UCrJhliKNQ8g0qoE_zvL8eVg/videos"&gt;all the talks are on YouTube&lt;/a&gt; and they are packed with good info. Some that I attended and enjoyed: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hJhZhLg3obk"&gt;Amjith Ramanujam - Awesome Command Line Tools&lt;/a&gt;: this was a great talk which taught me a lot of new tools to make your CLI apps more user-focused.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=npw4s1QTmPg"&gt;Raymond Hettinger - Modern Python Dictionaries A confluence of a dozen great ideas&lt;/a&gt;. As all talks by Raymond, highly informative and entertaining. More dicts: &lt;a href="https://www.youtube.com/watch?v=66P5FMkWoVU"&gt;Brandon Rhodes - The Dictionary Even Mightier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qOH-h-EKKac"&gt;Dave Forgac - Share Your Code! Python Packaging Without Complication&lt;/a&gt; - useful / practical talk, makes me want to try &lt;a href="https://github.com/audreyr/cookiecutter"&gt;cookiecutter&lt;/a&gt; and write an article about it.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9TfDYds8WPg"&gt;Sep Dehpour - Magic Method, on the wall, who, now, is the fairest one of all&lt;/a&gt; - this was a fun talk showing what you can do with dunder methods and some things you probably should not do ;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xId9B1BVusA&amp;amp;t=11148s"&gt;Chalmer Lowe - bokeh: Data Visualization in Python (workshop)&lt;/a&gt; - I will definitely use Bokeh next time I need to do some data visualization, this workshop gave me all the basics to get started.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KIXACCJHtDg"&gt;Ben Zaitlen, Matthew Rocklin, Min Ragan Kelley, Olivier Grisel - Parallel Data Analysis (workshop)&lt;/a&gt; - great experimentation/ (first) exposure to parallel tools like map, submit and Dask/Spark. The workshops showed a lot of new tools, here they used futures and snakeviz for example, very cool.&lt;/li&gt;
&lt;li&gt;Testing: &lt;a href="https://www.youtube.com/watch?v=Vaq_e7qUA-4"&gt;Big picture software testing unit testing, Lean Startup, and everything in between&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=jmsk1QZQEvQ"&gt;James Saryerwinnie - Next Level Testing&lt;/a&gt;: good overview and learning about new libraries to write more/better tests.&lt;/li&gt;
&lt;li&gt;APIs: &lt;a href="https://www.youtube.com/watch?v=4mkFfce46zE"&gt;Fl√°vio Juvenal - How to make a good library API&lt;/a&gt; - nice talk showing examples of good vs bad APIs, conclusion: &lt;a href="https://twitter.com/pybites/status/866053135399174145"&gt;an #API should make the simple easy, the complex possible and the wrong impossible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Data analysis: &lt;a href="https://www.youtube.com/watch?v=kWtffImyfp8"&gt;Deborah Hanus - Lights, camera, action! Scraping a great dataset to predict Oscar winners&lt;/a&gt; - this was a cool example showing how to obtain and prepare movie data, perform data analysis and make predictions. It inspired me to try to do a similar analysis using another data set.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some that I missed and plan on watching next: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vGphzPLemZE"&gt;Andrew T Baker - 5 ways to deploy your Python web app in 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2FftatTS3jc"&gt;Nicole Zuckerman - The Glory of pdb's set trace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=v75rNdPukuI"&gt;Sam Agnew - Hacking Classic Nintendo Games with Python&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;And definitely quite a few more ...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I did see a lot of Python 3.6 mentioned/used, which seems a good trend.&lt;/p&gt;
&lt;h2&gt;Great community&lt;/h2&gt;
&lt;p&gt;One talk I wanted to highlight in particular is &lt;a href="https://www.youtube.com/watch?v=Wc1krFb5ifQ"&gt;Mariatta Wijaya's Dial M For Mentor&lt;/a&gt; about finding a mentor and how she became the first Woman Python Core Dev. She received a &lt;a href="https://twitter.com/matrixise/status/865678978677223429"&gt;standing ovation&lt;/a&gt; and it goes on to show how awesome our Python community is.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mentors learn from you too.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;Good mentor's don't hang around in communities that enable and accept trolls and assholes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Some impressions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Arriving:&lt;/p&gt;
&lt;p&gt;&lt;img alt="pycon pic 1" src="https://pybit.es/images/pycon/1.JPG"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Zen of Python conference t-shirt:&lt;/p&gt;
&lt;p&gt;&lt;img alt="pycon pic 2" src="https://pybit.es/images/pycon/2.JPG"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The convention center was nice:&lt;/p&gt;
&lt;p&gt;&lt;img alt="pycon pic 3" src="https://pybit.es/images/pycon/3.JPG"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Expo hall - meet fellow Pythonistas!&lt;/p&gt;
&lt;p&gt;&lt;img alt="pycon pic 4" src="https://pybit.es/images/pycon/4.JPG"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Panel discussion with our &lt;a href="https://en.wikipedia.org/wiki/Benevolent_dictator_for_life"&gt;BDFL&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="pycon pic 5" src="https://pybit.es/images/pycon/5.JPG"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Twitter bot tutorial poster:&lt;/p&gt;
&lt;p&gt;&lt;img alt="pycon pic 6" src="https://pybit.es/images/pycon/6.JPG"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another original poster: &lt;/p&gt;
&lt;p&gt;&lt;img alt="pycon pic 7" src="https://pybit.es/images/pycon/7.JPG"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PyCon is getting more visitors every year:&lt;/p&gt;
&lt;p&gt;&lt;img alt="pycon pic 8" src="https://pybit.es/images/pycon/8.JPG"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Receiving my share of power holding the &lt;a href="https://twitter.com/hashtag/pythonicstaffofenlightenment?src=hash"&gt;pythonicstaffofenlightenment&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="pycon pic 9" src="https://pybit.es/images/pycon/9.JPG"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Closing dinner at the Portland museum of Art, each table received cards to kickstart the networking (although this happened naturally anyways):&lt;/p&gt;
&lt;p&gt;&lt;img alt="pycon pic 10" src="https://pybit.es/images/pycon/10.JPG"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more impressions check &lt;a href="https://twitter.com/search?q=pycon2017&amp;amp;src=typd"&gt;hashtag #pycon2017&lt;/a&gt; on Twitter and our &lt;a href="http://pybit.es/twitter_digest_201720.html"&gt;special digest&lt;/a&gt; we published during the conference weekend.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Keep Calm and Code in Python!&lt;/p&gt;
&lt;p&gt;-- Bob&lt;/p&gt;</content><category term="conference"></category><category term="pycon"></category><category term="learning"></category><category term="community"></category><category term="networking"></category><category term="bokeh"></category><category term="parallel"></category><category term="mentoring"></category><category term="photos"></category></entry><entry><title>Write Pythonic Code Like a Seasoned Developer Review</title><link href="https://pybit.es/pythonic-code-course-rewiew.html" rel="alternate"></link><published>2017-02-23T20:30:00+01:00</published><updated>2017-02-23T20:30:00+01:00</updated><author><name>Julian</name></author><id>tag:pybit.es,2017-02-23:/pythonic-code-course-rewiew.html</id><summary type="html">&lt;p&gt;Review of Michael Kennedy's Brilliant Pythonic Code Course&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I'd hit a point in my Python learning where reading books, posts, github, etc  just wasn't cutting it. Sometimes the self-learning experience can slow down and you start stagnating. I decided it was time to try learning from some video courses.&lt;/p&gt;
&lt;p&gt;At first I started watching YouTube videos but was eventually (and luckily!) introduced to the &lt;a href="https://training.talkpython.fm"&gt;Talk Python Training Courses&lt;/a&gt; by Michael Kennedy, host of the &lt;a href="https://talkpython.fm"&gt;Talk Python Podcast&lt;/a&gt;. Needless to say, I was so impressed I had to write about it!&lt;/p&gt;
&lt;h2&gt;Write Pythonic Code Like a Seasoned Developer&lt;/h2&gt;
&lt;p&gt;I'll start by calling out that Michael has 4 courses on offer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://training.talkpython.fm/courses/explore_python_jumpstart/python-language-jumpstart-building-10-apps"&gt;Python Jumpstart by Building 10 Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://training.talkpython.fm/courses/explore_pythonic_code/write-pythonic-code-like-a-seasoned-developer"&gt;Write Pythonic Code Like a Seasoned Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://training.talkpython.fm/courses/explore_entrepreneurs/python-for-entrepreneurs-build-and-launch-your-online-business"&gt;Python for Entrepreneurs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://training.talkpython.fm/courses/explore_http_reset_client_course/consuming-http-and-soap-services-in-python-with-json-xml-and-screen-scraping"&gt;Consuming HTTP Services in Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a beginner, I actually should have started with the &lt;em&gt;Python Jumpstart&lt;/em&gt; course as it's definitely of the "Learn Python" variant but I just couldn't look past the &lt;em&gt;Write Pythonic Code&lt;/em&gt; option!&lt;/p&gt;
&lt;h2&gt;No BS&lt;/h2&gt;
&lt;p&gt;The first thing you'll notice when you kick off Michael's course is that there's no fluff and that's why I absolutely &lt;strong&gt;love&lt;/strong&gt; it. After the initial set up of the environment, he drops you straight into PEP8 recommended styling.&lt;/p&gt;
&lt;p&gt;There is no lecturing, there's just code and it's amazing. Every single concept is backed up by real and "live" examples. Michael even leaves certain, relatable mistakes in the course just to demonstrate how easy it is to make them.&lt;/p&gt;
&lt;h2&gt;The Content&lt;/h2&gt;
&lt;p&gt;In these first 13 minutes I learned &lt;em&gt;so&lt;/em&gt; many techniques and best practices.&lt;/p&gt;
&lt;p&gt;Quite a few times I found myself cursing that it had taken me weeks to learn what Michael was demonstrating in meer minutes.&lt;/p&gt;
&lt;p&gt;The beauty of the course however lies in the fact that you're not spoon fed everything. You're expected to have prior knowledge of concepts such as Python Classes, data structures and so on.&lt;/p&gt;
&lt;p&gt;The courses teaches you to do exactly what the title implies: &lt;em&gt;To Write Pythonic Code&lt;/em&gt;. Plain and simple! You will learn the most Pythonic way to merge dictionaries, format strings and write loops (just to name a few).&lt;/p&gt;
&lt;p&gt;It sounds simplistic but it's actually quite in depth. I was really impressed at how deep Michael dives with some of his explanations!&lt;/p&gt;
&lt;h2&gt;Teaching Style&lt;/h2&gt;
&lt;p&gt;This brings me to the teaching style. There are two kinds of teachers, the type that will bore you to death with slides and monotony, and then there are the ones that teach in such a way that you're excited to learn.&lt;/p&gt;
&lt;p&gt;That's Michael.&lt;/p&gt;
&lt;p&gt;Like I said, every concept is backed by oodles of code examples. Michael "live" types the code - &lt;em&gt;so&lt;/em&gt; much better than static slides.&lt;/p&gt;
&lt;p&gt;My favourite thing is that he demonstrates the multiple ways you can write the same block of code.&lt;/p&gt;
&lt;p&gt;For example, in numerous instances he shows you how to write the code in a "Bad C-Style" way, then shows you the "less Pythonic" method, followed by the amazingly Pythonic super way.&lt;/p&gt;
&lt;p&gt;Seeing this progression from "bad" to Pythonic really helps to cement the concepts.&lt;/p&gt;
&lt;h2&gt;Familiarity&lt;/h2&gt;
&lt;p&gt;I feel I should mention that as I listen to the &lt;em&gt;Talk Python To Me&lt;/em&gt; podcast, there's a sense of familiarity. I don't feel like I'm taking a course from some stranger but rather from someone I know.&lt;/p&gt;
&lt;p&gt;I've listened to Michael for hours on end through the podcast which really helps with the engagement. (The occasional joke also contributes!). It's pretty cool and definitely not creepy at all okay?!&lt;/p&gt;
&lt;h2&gt;Where are the Examples?&lt;/h2&gt;
&lt;p&gt;You might be wondering why I haven't provided any examples to back up my judgement.
The reality is, Michael's clearly put a &lt;strong&gt;lot&lt;/strong&gt; of hard work into this course (it's &lt;em&gt;extremeley&lt;/em&gt; polished) so copying any of his code examples here would be doing him a disservice.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Clearly I'm a fan. I've seen online courses for Python before and quite a few have left me wanting but not this one.&lt;/p&gt;
&lt;p&gt;I wish I'd stumbled upon &lt;em&gt;Write Pythonic Code Like a Seasoned Developer&lt;/em&gt; a lot earlier.&lt;/p&gt;
&lt;p&gt;When it comes to writing Pythonic code, if you want to learn the how and also the &lt;em&gt;why&lt;/em&gt; then this is the course for you.&lt;/p&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;Here are some resources you might find helpful relative to this post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://training.talkpython.fm/courses/explore_pythonic_code/write-pythonic-code-like-a-seasoned-developer"&gt;Write Pythonic Code Like a Seasoned Developer Course URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Michael's &lt;a href="https://talkpython.fm/"&gt;Talk Python to Me Podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Michael Kennedy and Brian Okken's &lt;a href="https://pythonbytes.fm/"&gt;Python Bytes Podcast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Keep Calm and Code in Python!&lt;/p&gt;
&lt;p&gt;-- Julian&lt;/p&gt;</content><category term="python"></category><category term="training"></category><category term="courses"></category><category term="review"></category><category term="learning"></category></entry></feed>